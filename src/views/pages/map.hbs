    <div id="location-box"></div>
   <style>
    #location-box {
        position: absolute;
        top: 10px;
        right: 10px;
        background: rgba(255, 255, 255, 0.9);
        padding: 8px;
        border-radius: 5px;
        font-size: 14px;
        z-index: 1000; /* Ensure it's above the map */
    }

    #map {
        height: 100vh; 
        width: 100%;
    }
    </style>

   <div id="map"></div>

    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        const map = L.map('map').setView([40.00743998148659, -105.26336185653743], 13); // Default location

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);


        function updateLocation(lat, lng) {
            document.getElementById("location-box").innerText = `Current Location: ${lat.toFixed(5)}, ${lng.toFixed(5)}`;
        }

        map.locate({ setView: false, maxZoom: 16, watch: true });

        let firstUpdate = true; 

        map.on('locationfound', function (e) {
            const lat = e.latlng.lat;
            const lng = e.latlng.lng
            L.marker([lat, lng]).addTo(map)
            updateLocation(lat,lng);
            if(firstUpdate)
            {
                map.setView([lat, lng], 15);
                firstUpdate = false;
            }
        })

        map.on('locationerror', function () {
            document.getElementById("location-box").innerText = "Location access denied!";
        });

        const flowerIcon = L.icon({
            iconUrl: "/img/pin_red.png", // Path to your custom image
            iconSize: [40, 40], // Size of the icon [width, height]
            iconAnchor: [20, 40], // Position relative to the marker point
            popupAnchor: [0, -40] // Position relative to the popup
        });

        // Watch user location and send updates
        navigator.geolocation.watchPosition((position) => {
            const { latitude, longitude } = position.coords;
        });

        // Receive live location updates

        navigator.geolocation.getCurrentPosition((position) => {
            const { latitude, longitude } = position.coords;
        });

        function SavePosition(position)
        {
            const { latitude, longitude } = position.coords;
            L.marker([latitude, longitude], {icon: flowerIcon}).addTo(map);
            map.setView([latitude, longitude], 15);
        }

        navigator.geolocation.getCurrentPosition(SavePosition, (error) => {
            console.error("Error getting location:", error.message);
        });



    </script>
