<!-- Essential imports -->
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Lora:wght@400;600&family=Poppins:wght@300;500&display=swap">
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

<div class="profile-page">
    <div class="profile-container">
        <!-- Header with avatar -->
        <div class="profile-header">
            <div class="avatar">
                {{#if user.avatar}}<img src="{{user.avatar}}" alt="{{user.username}}">
                {{else}}<div class="avatar-placeholder"><i class="fa fa-seedling"></i></div>{{/if}}
                <h1>{{user.username}}</h1>
                <p class="tagline">Botanical Explorer</p>
            </div>
            
            <!-- Stats row -->
            <div class="stats">
                <div class="stat"><span>{{user.discoveryCount}}</span><label>Discoveries</label></div>
                <div class="stat"><span>{{user.collectionCount}}</span><label>Collection</label></div>
                <div class="stat"><span>{{user.badgeCount}}</span><label>Badges</label></div>
            </div>
        </div>
        
        <!-- Tabs -->
        <div class="tabs">
            <button class="tab active" data-tab="discoveries"><i class="fa fa-compass"></i> Discoveries</button>
            <button class="tab" data-tab="collection"><i class="fa fa-book-open"></i> Collection</button>
        </div>
        
        <!-- Discoveries tab -->
        <div class="tab-content visible" id="discoveries-tab">
            {{#if user.discoveries.length}}
                <div class="items">
                    {{#each user.discoveries}}
                        <div class="card" data-lat="{{this.latitude}}" data-lng="{{this.longitude}}" data-name="{{this.name}}" data-date="{{this.date}}">
                            <div class="icon {{toLowerCase this.name}}"><i class="fa fa-seedling"></i></div>
                            <div class="details">
                                <h3>{{this.name}}</h3>
                                <div class="meta">
                                    <span><i class="fa fa-calendar"></i> {{this.date}}</span>
                                    <span><i class="fa fa-map-pin"></i> {{this.location}}</span>
                                </div>
                            </div>
                            <div class="actions"><i class="fa fa-map-marked-alt"></i></div>
                        </div>
                    {{/each}}
                </div>
            {{else}}
                <div class="empty">
                    <i class="fa fa-search"></i>
                    <h3>No discoveries yet</h3>
                    <p>Start identifying flowers around you</p>
                    <a href="/identify" class="btn">Identify Flowers</a>
                </div>
            {{/if}}
        </div>
        
        <!-- Collection tab -->
        <div class="tab-content" id="collection-tab">
            {{#if user.collection.length}}
                <div class="items">
                    {{#each user.collection}}
                        <div class="card">
                            <div class="icon {{toLowerCase this.name}}"><i class="fa fa-spa"></i></div>
                            <div class="details">
                                <h3>{{this.name}}</h3>
                                <p class="scientific">{{this.scientificName}}</p>
                                <div class="tags">
                                    {{#each this.tags}}<span class="tag">{{this}}</span>{{/each}}
                                </div>
                            </div>
                        </div>
                    {{/each}}
                </div>
            {{else}}
                <div class="empty">
                    <i class="fa fa-book"></i>
                    <h3>Collection is empty</h3>
                    <p>Discover flowers to build your collection</p>
                    <a href="/explore" class="btn">Explore Flowers</a>
                </div>
            {{/if}}
        </div>
        
        <a href="/logout" class="logout"><i class="fa fa-sign-out-alt"></i> Log out</a>
    </div>
    
    <!-- Bottom navigation -->
    <nav class="nav">
        <a href="/home"><i class="fa fa-home"></i><span>Home</span></a>
        <a href="/identify" class="camera"><i class="fa fa-camera"></i></a>
        <a href="/profile" class="active"><i class="fa fa-user"></i><span>Profile</span></a>
    </nav>
    
    <!-- Map modal -->
    <div id="map-modal" class="modal">
        <div class="modal-content">
            <header>
                <h3 id="map-title">Flower Location</h3>
                <button class="close"><i class="fa fa-times"></i></button>
            </header>
            <div id="discovery-map"></div>
            <footer>
                <div id="map-flower-name" class="flower-name"></div>
                <div id="map-date" class="date"></div>
                <div id="map-coordinates" class="coords"></div>
            </footer>
        </div>
    </div>
</div>

<style>
    :root {
        --primary: #4CAF50;
        --primary-light: #80C683;
        --secondary: #FFC107;
        --text: #333;
        --text-light: #757575;
        --bg: #F9F9F9;
        --card: #FFF;
        --rose: #E91E63;
        --tulip: #FF9800;
        --daisy: #9C27B0;
        --sunflower: #FFC107;
        --dandelion: #FF9800;
        --font-title: 'Lora', serif;
        --font-body: 'Poppins', sans-serif;
        --shadow: 0 2px 8px rgba(0,0,0,0.08);
    }
    
    /* Base */
    body {
        background-color: var(--bg);
        color: var(--text);
        font-family: var(--font-body);
        margin: 0;
    }
    
    h1, h2, h3 {
        font-family: var(--font-title);
        margin: 0;
    }
    
    /* Layout */
    .profile-page {
        min-height: 100vh;
        padding-bottom: 70px;
        position: relative;
    }
    
    .profile-container {
        max-width: 550px;
        margin: 0 auto;
        padding: 16px;
    }
    
    /* Header */
    .profile-header {
        text-align: center;
        padding: 20px 0;
    }
    
    .avatar {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    
    .avatar-placeholder, .avatar img {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        background: linear-gradient(135deg, var(--primary-light), var(--primary));
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 36px;
        margin-bottom: 12px;
        box-shadow: var(--shadow);
        border: 3px solid white;
        object-fit: cover;
    }
    
    .avatar h1 {
        font-size: 22px;
        margin: 4px 0;
    }
    
    .tagline {
        color: var(--text-light);
        font-size: 14px;
        margin: 0 0 16px;
    }
    
    .stats {
        display: flex;
        justify-content: center;
        gap: 24px;
        margin: 16px 0;
    }
    
    .stat {
        text-align: center;
    }
    
    .stat span {
        font-family: var(--font-title);
        font-size: 24px;
        color: var(--primary);
        font-weight: 600;
        display: block;
    }
    
    .stat label {
        font-size: 12px;
        color: var(--text-light);
    }
    
    /* Tabs */
    .tabs {
        display: flex;
        border-bottom: 1px solid rgba(0,0,0,0.08);
        margin-bottom: 20px;
    }
    
    .tab {
        flex: 1;
        background: none;
        border: none;
        padding: 12px;
        font-family: var(--font-title);
        font-size: 16px;
        color: var(--text-light);
        position: relative;
        cursor: pointer;
    }
    
    .tab.active {
        color: var(--primary);
    }
    
    .tab.active:after {
        content: '';
        position: absolute;
        bottom: -1px;
        left: 20%;
        width: 60%;
        height: 2px;
        background: var(--primary);
    }
    
    /* Tab content */
    .tab-content {
        display: none;
    }
    
    .tab-content.visible {
        display: block;
        animation: fade 0.3s;
    }
    
    @keyframes fade {
        from { opacity: 0; }
        to { opacity: 1; }
    }
    
    /* Cards */
    .items {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }
    
    .card {
        display: flex;
        align-items: center;
        background: var(--card);
        border-radius: 12px;
        padding: 14px;
        box-shadow: var(--shadow);
        transition: all 0.2s;
        cursor: pointer;
    }
    
    .card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.12);
    }
    
    .icon {
        width: 46px;
        height: 46px;
        border-radius: 50%;
        background: var(--primary);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 18px;
        margin-right: 14px;
        flex-shrink: 0;
    }
    
    /* Flower colors */
    .icon.rose { background: var(--rose); }
    .icon.tulip { background: var(--tulip); }
    .icon.daisy { background: var(--daisy); }
    .icon.sunflower { background: var(--sunflower); }
    .icon.dandelion { background: var(--dandelion); }
    
    .details {
        flex: 1;
    }
    
    .details h3 {
        font-size: 16px;
        margin-bottom: 4px;
    }
    
    .meta {
        display: flex;
        flex-direction: column;
        gap: 4px;
    }
    
    .meta span {
        font-size: 12px;
        color: var(--text-light);
        display: flex;
        align-items: center;
        gap: 5px;
    }
    
    .scientific {
        font-style: italic;
        color: var(--text-light);
        font-size: 13px;
        margin: 2px 0 8px;
    }
    
    .tags {
        display: flex;
        flex-wrap: wrap;
        gap: 4px;
    }
    
    .tag {
        background: rgba(76,175,80,0.1);
        color: var(--primary);
        font-size: 11px;
        padding: 2px 8px;
        border-radius: 12px;
    }
    
    .actions {
        color: var(--primary);
    }
    
    /* Empty states */
    .empty {
        text-align: center;
        padding: 40px 20px;
    }
    
    .empty i {
        font-size: 32px;
        color: var(--primary);
        margin-bottom: 16px;
    }
    
    .empty h3 {
        margin-bottom: 8px;
    }
    
    .empty p {
        color: var(--text-light);
        margin-bottom: 20px;
    }
    
    .btn {
        background: var(--primary);
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 500;
        text-decoration: none;
        display: inline-block;
    }
    
    /* Logout */
    .logout {
        display: block;
        text-align: center;
        margin-top: 30px;
        color: var(--text-light);
        text-decoration: none;
    }
    
    /* Bottom nav */
    .nav {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        height: 60px;
        background: white;
        display: flex;
        justify-content: space-around;
        align-items: center;
        box-shadow: 0 -2px 8px rgba(0,0,0,0.06);
    }
    
    .nav a {
        color: var(--text-light);
        display: flex;
        flex-direction: column;
        align-items: center;
        text-decoration: none;
        font-size: 12px;
        flex: 1;
    }
    
    .nav a.active {
        color: var(--primary);
    }
    
    .nav i {
        font-size: 20px;
        margin-bottom: 4px;
    }
    
    .camera {
        transform: translateY(-15px);
    }
    
    .camera i {
        background: var(--primary);
        width: 46px;
        height: 46px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        box-shadow: 0 4px 8px rgba(76,175,80,0.3);
    }
    
    /* Map modal */
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        backdrop-filter: blur(4px);
        z-index: 100;
        display: none;
        align-items: center;
        justify-content: center;
    }
    
    .modal.active {
        display: flex;
    }
    
    .modal-content {
        width: 90%;
        max-width: 500px;
        background: white;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 8px 30px rgba(0,0,0,0.15);
    }
    
    .modal-content header {
        display: flex;
        justify-content: space-between;
        padding: 16px;
        border-bottom: 1px solid rgba(0,0,0,0.05);
    }
    
    .close {
        background: none;
        border: none;
        font-size: 18px;
        cursor: pointer;
    }
    
    #discovery-map {
        height: 280px;
    }
    
    .modal-content footer {
        padding: 12px 16px;
        background: #f5f5f5;
    }
    
    .flower-name {
        font-weight: 500;
        color: var(--primary);
        margin-bottom: 6px;
    }
    
    .date, .coords {
        font-size: 13px;
        color: var(--text-light);
        margin-bottom: 4px;
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Register Handlebars helper
    if (typeof Handlebars !== 'undefined') {
        Handlebars.registerHelper('toLowerCase', str => str.toLowerCase());
    }

    // Tab switching
    document.querySelectorAll('.tab').forEach(tab => {
        tab.addEventListener('click', () => {
            const tabId = tab.getAttribute('data-tab');
            
            document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('visible'));
            
            tab.classList.add('active');
            document.getElementById(`${tabId}-tab`).classList.add('visible');
        });
    });

    // Map functionality
    let map = null;
    const mapModal = document.getElementById('map-modal');
    const closeBtn = document.querySelector('.close');
    
    // Show map for discovery
    document.querySelectorAll('.card').forEach(card => {
        card.addEventListener('click', () => {
            const lat = parseFloat(card.getAttribute('data-lat'));
            const lng = parseFloat(card.getAttribute('data-lng'));
            const name = card.getAttribute('data-name');
            const date = card.getAttribute('data-date');
            
            if (!isNaN(lat) && !isNaN(lng)) {
                showMap(lat, lng, name, date);
            } else {
                document.getElementById('map-title').textContent = 'No Location Data';
                document.getElementById('map-flower-name').textContent = name;
                document.getElementById('map-date').textContent = date || '';
                document.getElementById('map-coordinates').textContent = '';
                mapModal.classList.add('active');
            }
        });
    });
    
    // Close modal
    closeBtn.addEventListener('click', () => mapModal.classList.remove('active'));
    mapModal.addEventListener('click', e => {
        if (e.target === mapModal) mapModal.classList.remove('active');
    });
    
    // Show map with location
    function showMap(lat, lng, flowerName, date) {
        document.getElementById('map-flower-name').textContent = flowerName;
        document.getElementById('map-date').textContent = `Discovered: ${date}`;
        document.getElementById('map-coordinates').textContent = `${lat.toFixed(4)}, ${lng.toFixed(4)}`;
        
        mapModal.classList.add('active');
        
        setTimeout(() => {
            const mapDiv = document.getElementById('discovery-map');
            mapDiv.innerHTML = '';
            
            const newMapId = 'map-' + Date.now();
            const newMapEl = document.createElement('div');
            newMapEl.id = newMapId;
            newMapEl.style.height = '100%';
            mapDiv.appendChild(newMapEl);
            
            if (map) map.remove();
            
            map = L.map(newMapId).setView([lat, lng], 14);
            
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; OpenStreetMap contributors'
            }).addTo(map);
            
            L.marker([lat, lng]).addTo(map);
        }, 100);
    }
});
</script>